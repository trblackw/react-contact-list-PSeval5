{"version":3,"sources":["components/ContactsContext.js","components/elements/Toggle.js","components/elements/Icon.js","components/elements/Modal.js","components/Contact.js","components/Contacts.js","components/AddContact.js","helpers.js","components/ContactToEdit.js","components/EditContact.js","components/ContactsContextProvider.js","App.js","serviceWorker.js","index.js"],"names":["ContactsContext","createContext","Consumer","Provider","Toggle","state","on","toggle","_this","setState","children","this","props","Component","Icon","name","react_default","a","createElement","x","y","width","height","viewBox","enableBackground","fill","color","points","xmlns","data-name","opacity","d","transform","defaultProps","modalRoot","document","getElementById","Portal","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","componentDidMount","appendChild","el","componentWillUnmount","removeChild","createPortal","Modal","_this$props","Modal_Portal","ModalWrapper","ModalCard","CloseButton","onClick","Icon_Icon","Background","styled","div","_templateObject","_templateObject2","button","_templateObject3","_templateObject4","Contact","_ref","img","email","number","id","_ref2","remove","ContactContainer","className","ContactImageContainer","src","alt","Link","to","concat","Toggle_Toggle","_ref3","react","Modal_Modal","style","textAlign","Button","background","display","margin","Contact_templateObject","Contact_templateObject2","Contacts","contacts","ContactsContainer","ContactsHeader","map","contact","components_Contact","key","image_url","phone_number","Contacts_templateObject","Contacts_templateObject2","Contacts_templateObject3","AddContact","Math","round","random","contactAdded","handleSubmit","e","preventDefault","contactForm","reset","isValidEmail","test","alert","formatNumber","formattedNumber","replace","value","addContact","useDefaultImg","console","log","image","defaultValue","handleName","target","handleEmail","handleNumber","handleImage","_this2","add","ContactForm","onSubmit","ref","position","top","htmlFor","type","placeholder","onChange","onBlur","ContactButton","form","AddContact_templateObject","AddContact_templateObject2","reducer","arr","newState","reduce","newStateObj","input","ContactToEdit","collectState","inputs","toConsumableArray","querySelectorAll","_reducer","update","autoFocus","getDerivedStateFromProps","EditContact","selectedID","match","params","find","cont","Number","undefined","EditContact_ContactContainer","ContactToEdit_ContactToEdit","EditContact_templateObject","ContactsContextProvider","dummyContacts","removeContact","prevState","filter","updateContact","editedContact","contactToUpdate","updatedContacts","App","ContactsContextProvider_ContactsContextProvider","BrowserRouter","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.df45afc3.chunk.js","sourcesContent":["import { createContext } from 'react';\nexport const ContactsContext = createContext();\n\nexport const Consumer = ContactsContext.Consumer;\nexport const Provider = ContactsContext.Provider;","import { Component } from \"react\";\nexport default class Toggle extends Component {\n  state = {\n    on: false\n  };\n  toggle = () => {\n    this.setState(state => ({\n      on: !state.on\n    }));\n  };\n  render() {\n    const { children } = this.props;\n    return children({\n      on: this.state.on,\n      toggle: this.toggle\n    });\n  }\n}\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport default class Icon extends Component {\n  static defaultProps = {\n    color: \"red\"\n  };\n\n  render() {\n    switch (this.props.name) {\n      case \"close\":\n        return (\n          <svg\n            x=\"0px\"\n            y=\"0px\"\n            width=\"18px\"\n            height=\"18px\"\n            viewBox=\"0 0 31.11 31.11\"\n            enableBackground=\"new 0 0 31.11 31.11\"\n          >\n            <polygon\n              fill={this.props.color}\n              points=\"31.11,1.41 29.7,0 15.56,14.14 1.41,0 0,1.41 14.14,15.56 0,29.7 1.41,31.11 15.56,16.97   29.7,31.11 31.11,29.7 16.97,15.56 \"\n            />\n          </svg>\n        );\n      case \"check\":\n        return (\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            x=\"0px\"\n            y=\"0px\"\n            width=\"60px\"\n            height=\"60px\"\n            viewBox=\"0 0 31.11 31.11\"\n            enableBackground=\"new 0 0 31.11 31.11\"\n            fill={this.props.color}\n          >\n            <g data-name=\"checkmark\">\n              <rect width=\"24px\" height=\"24px\" opacity=\"0\" />\n              <path d=\"M9.86 18a1 1 0 0 1-.73-.32l-4.86-5.17a1 1 0 1 1 1.46-1.37l4.12 4.39 8.41-9.2a1 1 0 1 1 1.48 1.34l-9.14 10a1 1 0 0 1-.73.33z\" />\n            </g>\n          </svg>\n        );\n      case \"remove\":\n        return (\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            x=\"0px\"\n            y=\"0px\"\n            width=\"60px\"\n            height=\"60px\"\n            viewBox=\"0 0 31.11 31.11\"\n            enableBackground=\"new 0 0 31.11 31.11\"\n            fill={this.props.color}\n          >\n            <g data-name=\"Layer 2\">\n              <g data-name=\"close\">\n                <rect\n                  width=\"18\"\n                  height=\"18\"\n                  transform=\"rotate(180 12 12)\"\n                  opacity=\"0\"\n                />\n                <path d=\"M13.41 12l4.3-4.29a1 1 0 1 0-1.42-1.42L12 10.59l-4.29-4.3a1 1 0 0 0-1.42 1.42l4.3 4.29-4.3 4.29a1 1 0 0 0 0 1.42 1 1 0 0 0 1.42 0l4.29-4.3 4.29 4.3a1 1 0 0 0 1.42 0 1 1 0 0 0 0-1.42z\" />\n              </g>\n            </g>\n          </svg>\n        );\n      case \"edit\":\n        return (\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            x=\"0px\"\n            y=\"0px\"\n            width=\"60px\"\n            height=\"60px\"\n            viewBox=\"0 0 31.11 31.11\"\n            enableBackground=\"new 0 0 31.11 31.11\"\n            fill={this.props.color}\n          >\n            <g data-name=\"Layer 2\">\n              <g data-name=\"edit-2\">\n                <rect width=\"24\" height=\"24\" opacity=\"0\" />\n                <path d=\"M19 20H5a1 1 0 0 0 0 2h14a1 1 0 0 0 0-2z\" />\n                <path d=\"M5 18h.09l4.17-.38a2 2 0 0 0 1.21-.57l9-9a1.92 1.92 0 0 0-.07-2.71L16.66 2.6A2 2 0 0 0 14 2.53l-9 9a2 2 0 0 0-.57 1.21L4 16.91a1 1 0 0 0 .29.8A1 1 0 0 0 5 18zM15.27 4L18 6.73l-2 1.95L13.32 6zm-8.9 8.91L12 7.32l2.7 2.7-5.6 5.6-3 .28z\" />\n              </g>\n            </g>\n          </svg>\n        );\n      case \"back\":\n        return (\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            x=\"0px\"\n            y=\"0px\"\n            width=\"60px\"\n            height=\"60px\"\n            viewBox=\"0 0 31.11 31.11\"\n            enableBackground=\"new 0 0 31.11 31.11\"\n            fill={this.props.color}\n          >\n            <g data-name=\"Layer 2\">\n              <g data-name=\"arrow-back\">\n                <rect\n                  width=\"24\"\n                  height=\"24\"\n                  transform=\"rotate(90 12 12)\"\n                  opacity=\"0\"\n                />\n                <path d=\"M19 11H7.14l3.63-4.36a1 1 0 1 0-1.54-1.28l-5 6a1.19 1.19 0 0 0-.09.15c0 .05 0 .08-.07.13A1 1 0 0 0 4 12a1 1 0 0 0 .07.36c0 .05 0 .08.07.13a1.19 1.19 0 0 0 .09.15l5 6A1 1 0 0 0 10 19a1 1 0 0 0 .64-.23 1 1 0 0 0 .13-1.41L7.14 13H19a1 1 0 0 0 0-2z\" />\n              </g>\n            </g>\n          </svg>\n        );\n      default:\n        return null;\n    }\n  }\n}\n\nIcon.propTypes = {\n  name: PropTypes.string.isRequired\n};\n","import React, { Component } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport styled from \"styled-components\";\nimport Icon from \"./Icon\";\nimport PropTypes from \"prop-types\";\n\nconst modalRoot = document.getElementById(\"modal\");\n\nclass Portal extends Component {\n  constructor() {\n    super();\n    this.el = document.createElement(\"div\");\n  }\n\n  componentDidMount = () => modalRoot.appendChild(this.el);\n\n  componentWillUnmount = () => modalRoot.removeChild(this.el);\n\n  render() {\n    const { children } = this.props;\n    return createPortal(children, this.el);\n  }\n}\n\nexport default class Modal extends Component {\n  render() {\n    const { children, toggle, on } = this.props;\n    return (\n      <Portal>\n        {on && (\n          <ModalWrapper>\n            <ModalCard>\n              <CloseButton onClick={toggle}>\n                <Icon name=\"close\" />\n              </CloseButton>\n              <div>{children}</div>\n            </ModalCard>\n            <Background onClick={toggle} />\n          </ModalWrapper>\n        )}\n      </Portal>\n    );\n  }\n}\nModal.propTypes = {\n  children: PropTypes.arrayOf(PropTypes.object).isRequired,\n  toggle: PropTypes.func.isRequired,\n  on: PropTypes.bool.isRequired\n};\n\nconst ModalWrapper = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst ModalCard = styled.div`\n  position: relative;\n  min-width: 320px;\n  z-index: 10;\n  margin-bottom: 100px;\n  background: white;\n  border-radius: 5px;\n  padding: 15px;\n  box-shadow: 2px 2px 10px rgba(0, 0, 0, 0.3);\n`;\n\nconst CloseButton = styled.button`\n  position: absolute;\n  top: 0;\n  right: 0;\n  border: none;\n  background: transparent;\n  padding: 10px;\n`;\n\nconst Background = styled.div`\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  top: 0;\n  left: 0;\n  background: black;\n  opacity: 0.5;\n`;\n","import React, { Fragment } from \"react\";\nimport styled from \"styled-components\";\nimport { Consumer } from \"./ContactsContext\";\nimport { Link } from \"react-router-dom\";\nimport Toggle from \"./elements/Toggle\";\nimport Modal from \"./elements/Modal\";\nimport { Button } from \"./Contacts\";\nimport PropTypes from \"prop-types\";\nimport Icon from \"./elements/Icon\";\n\nconst Contact = ({ name, img, email, number, id }) => (\n  <Consumer>\n    {({ remove }) => (\n      <ContactContainer className=\"drop-shadow\">\n        <ContactImageContainer>\n          <img src={img} alt=\"\" />\n        </ContactImageContainer>\n        <div id=\"details\">\n          <h3>{name}</h3>\n          <small>{email}</small>\n          <br />\n          <small>{number}</small>\n        </div>\n        <div className=\"button-group\">\n          <Link to={`/${id}`}>\n            <button id=\"edit\">Edit</button>\n          </Link>\n          <Toggle>\n            {({ on, toggle }) => (\n              <Fragment>\n                <Link to=\"#\">\n                  <button id=\"remove\" onClick={toggle}>\n                    Remove\n                  </button>\n                </Link>\n                <Modal on={on} toggle={toggle}>\n                  <h3>Are you sure you want to delete {name}'s contact?</h3>\n                  <div className=\"button-group\" style={{ textAlign: \"center\" }}>\n                    <Button\n                      style={{\n                        background: \"transparent\",\n                        display: \"inline-block\",\n                        margin: \"1em\"\n                      }}\n                      onClick={() => {\n                        remove(id);\n                        toggle();\n                      }}\n                    >\n                      <Icon name=\"check\" color=\"green\" />\n                    </Button>\n                    <Button\n                      style={{\n                        background: \"transparent\",\n                        display: \"inline-block\",\n                        margin: \"1em\"\n                      }}\n                      onClick={toggle}\n                    >\n                      <Icon name=\"remove\" color=\"red\" />\n                    </Button>\n                  </div>\n                </Modal>\n              </Fragment>\n            )}\n          </Toggle>\n        </div>\n      </ContactContainer>\n    )}\n  </Consumer>\n);\n\nContact.propTypes = {\n  name: PropTypes.string.isRequired,\n  img: PropTypes.string.isRequired,\n  email: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  id: PropTypes.number.isRequired\n};\n\nexport default Contact;\n\nconst ContactContainer = styled.div`\n  margin: 1em auto;\n  padding: 0.5em;\n  background: whitesmoke;\n  width: 80%;\n  border-radius: 5px;\n  color: black;\n\n  div#details {\n    text-align: center;\n    padding: 0.6em;\n  }\n\n  .button-group {\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    margin: 0 auto;\n\n    button {\n      padding: 0.5em;\n      color: white;\n      width: 60px;\n      margin: 0 1em;\n      border: none;\n      border-radius: 2px;\n      &:hover {\n        transform: scale(1.2);\n        transition-duration: 300ms;\n        cursor: pointer;\n      }\n    }\n\n    #remove {\n      background: red;\n    }\n\n    #edit {\n      background: teal;\n    }\n  }\n`;\n\nexport const ContactImageContainer = styled.div`\n  width: 100px;\n  height: 100px;\n  clip-path: circle(50% at 50% 50%);\n  margin: 0 auto;\n  img {\n    width: 100px;\n    min-height: 100px;\n    object-fit: cover;\n  }\n`;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport Contact from \"./Contact\";\nimport { Consumer } from \"./ContactsContext\";\n\nclass Contacts extends Component {\n  render() {\n    return (\n      <Consumer>\n        {({ contacts }) => (\n          <ContactsContainer>\n            <ContactsHeader>\n              <h1>Contacts</h1>\n            </ContactsHeader>\n\n            <Link to=\"/add\">\n              <Button style={{ width: \"auto\" }} className=\"shadow\">Add contact</Button>\n            </Link>\n\n            <div id=\"contacts\" className=\"drop-shadow\">\n              {contacts.map(contact => (\n                <Contact\n                  key={contact.id}\n                  name={contact.name}\n                  email={contact.email}\n                  img={contact.image_url}\n                  number={contact.phone_number}\n                  id={contact.id}\n                />\n              ))}\n            </div>\n          </ContactsContainer>\n        )}\n      </Consumer>\n    );\n  }\n}\n\nexport default Contacts;\n\nconst ContactsContainer = styled.div`\n  margin: 0 auto;\n  color: whitesmoke;\n  padding: 1.5em;\n  background: #282c34;\n  #contacts {\n    display: grid;\n    grid-template-columns: repeat(4, .8fr);\n  }\n`;\n\nconst ContactsHeader = styled.div`\n  margin: 1.5em auto;\n  text-align: center;\n`;\n\nexport const Button = styled.button`\n  background: lightslategray;\n  color: whitesmoke;\n  padding: 0.7em;\n  width: 15%;\n  border: none;\n  border-radius: 2px;\n  display: block;\n  margin: 1em auto;\n  &:hover {\n    background: hsl(0, 100%, 71%);\n    color: whitesmoke;\n    cursor: pointer;\n  }\n`;\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport { Button } from \"./Contacts\";\nimport { Link } from \"react-router-dom\";\nimport { Consumer } from \"./ContactsContext\";\nimport Icon from \"./elements/Icon\";\n\nexport default class AddContact extends Component {\n  state = {\n    id: Math.round(Math.random() * 100000000),\n    name: \"\",\n    email: \"\",\n    phone_number: \"\",\n    image_url: \"\",\n    contactAdded: false\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.contactForm.reset();\n  };\n\n  isValidEmail = email => {\n    if (!/^[^@]+@[^@.]+\\.[a-z]+$/i.test(email)) {\n      alert(\"please enter a valid email\");\n    }\n  };\n\n  formatNumber = number => {\n    const formattedNumber = number.replace(\n      /(\\d{3})(\\d{3})(\\d{4})/,\n      \"($1) $2-$3\"\n    );\n    this.number.value = formattedNumber;\n  };\n\n  addContact = () =>\n    !this.state.contactAdded ? this.setState({ contactAdded: true }) : null;\n\n  useDefaultImg = e => {\n    e.preventDefault();\n    //neil degrasse tyson\n    this.setState(\n      {\n        image_url:\n          \"https://upload.wikimedia.org/wikipedia/commons/thumb/8/82/Neil_deGrasse_Tyson_in_June_2017_%28cropped%29.jpg/200px-Neil_deGrasse_Tyson_in_June_2017_%28cropped%29.jpg\"\n      },\n      () => {\n        console.log(this.state);\n        this.image.defaultValue = this.state.image_url;\n      }\n    );\n  };\n\n  handleName = e => this.setState({ name: e.target.value });\n  handleEmail = e => this.setState({ email: e.target.value });\n  handleNumber = e => this.setState({ phone_number: e.target.value });\n  handleImage = e => this.setState({ image_url: e.target.value });\n\n  render() {\n    return (\n      <Consumer>\n        {({ add }) => (\n          <ContactForm\n            onSubmit={e => this.handleSubmit(e)}\n            ref={contactForm => (this.contactForm = contactForm)}\n          >\n            <h1>New Contact</h1>\n            <Link to=\"/\" style={{ position: \"absolute\", top: 40 }}>\n              <Icon name=\"back\" color=\"black\" />\n            </Link>\n            <hr />\n            <div id=\"form-add\">\n              <label htmlFor=\"name\">Contact Name</label>\n              <input\n                type=\"text\"\n                placeholder=\"name\"\n                onChange={this.handleName}\n              />\n              <label htmlFor=\"email\">Contact Email</label>\n              <input\n                type=\"email\"\n                placeholder=\"email\"\n                onChange={this.handleEmail}\n                onBlur={() => this.isValidEmail(this.state.email)}\n              />\n              <label htmlFor=\"number\">Contact Number</label>\n              <input\n                type=\"text\"\n                placeholder=\"number\"\n                onChange={this.handleNumber}\n                ref={number => (this.number = number)}\n                onBlur={() => this.formatNumber(this.number.value)}\n              />\n              <label htmlFor=\"image\">Contact Image</label>\n              <button id=\"default-img\" onClick={this.useDefaultImg}>\n                use default image\n              </button>\n              <input\n                type=\"text\"\n                placeholder=\"image\"\n                onChange={this.handleImage}\n                ref={image => (this.image = image)}\n              />\n            </div>\n            <div className=\"button-group\" style={{ textAlign: \"center\" }}>\n              <ContactButton\n                type=\"submit\"\n                color=\"lightblue\"\n                onClick={() => {\n                  this.addContact();\n                  add(this.state);\n                }}\n              >\n                Add\n              </ContactButton>\n              {this.state.contactAdded && (\n                <ContactButton color=\"lightgreen\">\n                  <Link to=\"/\">Return to contacts</Link>\n                </ContactButton>\n              )}\n            </div>\n          </ContactForm>\n        )}\n      </Consumer>\n    );\n  }\n}\n\nexport const ContactForm = styled.form`\n  margin: 1.5em auto;\n  padding: 1em;\n  border: 2px solid black;\n  border-radius: 5px;\n  background: whitesmoke;\n  color: black;\n  width: 50%;\n  justify-content: center;\n\n  svg {\n    margin-top: 10px;\n    &:hover {\n      cursor: default;\n    }\n  }\n\n  h1 {\n    text-align: center;\n  }\n\n  #form-add,\n  #form-edit {\n    margin: 0 auto;\n    justify-content: center;\n    padding: 0 1em;\n  }\n\n  #form-add label {\n    margin-left: 1.8em;\n  }\n\n  input {\n    display: block;\n    margin: 1.5em auto;\n    padding: 0.5em;\n    width: 80%;\n  }\n\n  #default-img {\n    width: auto;\n    padding: 0.4em;\n    background: lightgreen;\n    border-radius: 4px;\n    margin-left: 6px;\n    &:hover {\n      cursor: pointer;\n    }\n  }\n`;\n\nconst ContactButton = styled.button`\n  width: 120px;\n  display: inline-block;\n  margin: 0 1em;\n  background: ${props => props.color};\n  padding: 0.5em;\n  border-radius: 4px;\n  a {\n    color: black;\n  }\n`;\n","export const reducer = arr => {\n  const newState = arr.reduce((newStateObj, input) => {\n    newStateObj[input.name] =\n      input.value !== input.defaultValue ? input.value : input.defaultValue;\n    return newStateObj;\n  }, {});\n  const { name, email, phone_number, image_url } = newState;\n  return { name, email, phone_number, image_url };\n};\n","import React, { Component } from \"react\";\nimport { ContactForm } from \"./AddContact\";\nimport { ContactImageContainer } from \"./Contact\";\nimport { Button } from \"./Contacts\";\nimport { Link } from \"react-router-dom\";\nimport { reducer } from \"../helpers\";\nimport PropTypes from \"prop-types\";\nimport Icon from \"./elements/Icon\";\n\nexport default class ContactToEdit extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    phone_number: \"\",\n    image_url: \"\"\n  };\n\n  //maintain id\n  static getDerivedStateFromProps = ({ id }) => ({ id });\n\n  collectState = () => {\n    const inputs = [...this.contactForm.querySelectorAll(\"input\")];\n    const { name, email, phone_number, image_url } = reducer(inputs);\n    //reducer function returns update { key-value pairs } for edit contact form\n    this.setState({ name, email, phone_number, image_url }, () =>\n      this.props.update(this.state)\n    );\n  };\n\n  render() {\n    const { name, email, phone_number, image_url } = this.props;\n    return (\n      <ContactForm\n        onSubmit={e => e.preventDefault()}\n        ref={contactForm => (this.contactForm = contactForm)}\n      >\n        <h4>Editting {name}'s contact</h4>\n        <ContactImageContainer>\n          <img src={image_url} alt=\"contact\" />\n        </ContactImageContainer>\n        <Icon name=\"edit\" color=\"teal\" />\n\n        <div id=\"form-edit\">\n          <input type=\"text\" name=\"name\" defaultValue={name} autoFocus />\n          <input type=\"email\" name=\"email\" defaultValue={email} />\n          <input type=\"text\" name=\"phone_number\" defaultValue={phone_number} />\n          <input type=\"text\" name=\"image_url\" defaultValue={image_url} />\n          <Button\n            style={{ width: \"auto\" }}\n            type=\"button\"\n            onClick={this.collectState}\n          >\n            Finish editing\n          </Button>\n        </div>\n        <Link to=\"/\">\n          <Button style={{ background: \"teal\", width: \"auto\" }}>\n            Return to contacts\n          </Button>\n        </Link>\n      </ContactForm>\n    );\n  }\n}\n\nContactToEdit.propTypes = {\n  name: PropTypes.string.isRequired,\n  image_url: PropTypes.string.isRequired,\n  email: PropTypes.string.isRequired,\n  phone_number: PropTypes.string.isRequired,\n  id: PropTypes.number.isRequired\n};\n","import React, { Component } from \"react\";\nimport { Consumer } from \"./ContactsContext\";\nimport styled from \"styled-components\";\nimport ContactToEdit from \"./ContactToEdit\";\n\nexport default class EditContact extends Component {\n  render() {\n    const selectedID = this.props.match.params.id;\n    return (\n      <Consumer>\n        {({ contacts, update }) => {\n          const contact = contacts.find(cont => cont.id === Number(selectedID));\n          return (\n            contact !== undefined && (\n              <ContactContainer className=\"drop-shadow\">\n                <ContactToEdit\n                  id={Number(selectedID)}\n                  name={contact.name}\n                  email={contact.email}\n                  image_url={contact.image_url}\n                  phone_number={contact.phone_number}\n                  update={update}\n                />\n              </ContactContainer>\n            )\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nconst ContactContainer = styled.div`\n  margin: 0 auto;\n  padding: 1em;\n  font-size: 1.5em;\n  text-align: center;\n\n  input {\n    width: 90%;\n  }\n`;\n","import React, { Component } from \"react\";\nimport { Provider } from \"./ContactsContext\";\n\nexport default class ContactsContextProvider extends Component {\n  state = {\n    contacts: []\n  };\n  componentDidMount = () => {\n    this.setState({\n      contacts: this.dummyContacts\n    });\n  };\n\n  removeContact = id => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== id)\n    }));\n  };\n\n  addContact = contact => {\n    this.setState(\n      prevState => ({\n        contacts: prevState.contacts.concat(contact)\n      }),\n      () => console.log(this.state.contacts)\n    );\n  };\n  updateContact = editedContact => {\n    const { contacts } = this.state;\n    const contactToUpdate = contacts.find(\n      contact => contact.id === Number(editedContact.id)\n    );\n    const updatedContacts = contacts.map(contact => {\n      if (contact.id === contactToUpdate.id) {\n        contact = editedContact;\n        return contact;\n      } else {\n        return contact;\n      }\n    });\n\n    this.setState({ contacts: updatedContacts });\n  };\n\n  dummyContacts = [\n    {\n      id: 70219577,\n      name: \"Albert Einstein\",\n      image_url:\n        \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQkKLxacs6mf33EYjU5tSXJJgx3byM7_Ut3UhED1mu7BNGOamBd3TTcToo\",\n      email: \"aeinstein@example.com\",\n      phone_number: \"15555555555\"\n    },\n    {\n      id: 21030349,\n      name: \"Alan Turing\",\n      image_url:\n        \"https://upload.wikimedia.org/wikipedia/commons/thumb/a/a1/Alan_Turing_Aged_16.jpg/220px-Alan_Turing_Aged_16.jpg\",\n      email: \"turing@example.com\",\n      phone_number: \"16666666666\"\n    },\n    {\n      id: 70384954,\n      name: \"Isaac Newton\",\n      image_url:\n        \"https://upload.wikimedia.org/wikipedia/commons/thumb/3/39/GodfreyKneller-IsaacNewton-1689.jpg/220px-GodfreyKneller-IsaacNewton-1689.jpg\",\n      email: \"newton@example.com\",\n      phone_number: \"15588855555\"\n    },\n    {\n      id: 703832904,\n      name: \"Benjamin Franklin\",\n      image_url:\n        \"https://upload.wikimedia.org/wikipedia/commons/thumb/2/25/Benjamin_Franklin_by_Joseph_Duplessis_1778.jpg/440px-Benjamin_Franklin_by_Joseph_Duplessis_1778.jpg\",\n      email: \"franklin@example.com\",\n      phone_number: \"15588855577\"\n    }\n  ];\n\n  render() {\n    return (\n      <Provider\n        value={{\n          contacts: this.state.contacts,\n          remove: this.removeContact,\n          add: this.addContact,\n          update: this.updateContact\n        }}\n      >\n        {this.props.children}\n      </Provider>\n    );\n  }\n}\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\nimport Contacts from \"./components/Contacts\";\nimport AddContact from \"./components/AddContact\";\nimport EditContact from \"./components/EditContact\";\nimport ContactsContextProvider from \"./components/ContactsContextProvider\";\n\nconst App = () => (\n  <ContactsContextProvider>\n    <Router>\n      <Switch>\n        <Route exact path=\"/\" component={Contacts} />\n        <Route path=\"/add\" component={AddContact} />\n        <Route path=\"/:id\" component={EditContact} />\n      </Switch>\n    </Router>\n  </ContactsContextProvider>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}